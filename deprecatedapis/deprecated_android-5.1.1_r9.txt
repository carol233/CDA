<android.net.Proxy: String getDefaultHost()>
<android.renderscript.Mesh.Builder: Builder addIndexSetType(Primitive)>
<android.webkit.CacheManager: void saveCacheFile(String,CacheResult)>
<android.renderscript.RSSurfaceView: void setRenderScriptGL(RenderScriptGL)>
<android.net.NetworkPolicyManager: boolean isUidValidForPolicy(Context,int)>
<android.widget.ImageView: void setAlpha(int)>
<android.speech.tts.TextToSpeech: int synthesizeToFile(String,HashMap<String, String>,String)>
<android.os.StatFs: int getBlockCount()>
<android.renderscript.Mesh.AllocationBuilder: AllocationBuilder addIndexSetType(Primitive)>
<android.text.style.ImageSpan: void <init>(Bitmap)>
<android.test.TouchUtils: void drag(ActivityInstrumentationTestCase,float,float,float,float,int)>
<android.media.MediaCodec: ByteBuffer[] getInputBuffers()>
<android.net.NetworkStats: NetworkStats combineValues(String,int,int,long,long,long,long,long)>
<android.webkit.UrlInterceptHandler: PluginData getPluginData(String,Map<String, String>)>
<android.preference.PreferenceActivity: boolean onPreferenceTreeClick(PreferenceScreen,Preference)>
<android.accounts.AccountManager: AccountManagerFuture<Boolean> removeAccount(Account,AccountManagerCallback<Boolean>,Handler)>
<android.graphics.drawable.BitmapDrawable: void <init>(Resources)>
<com.android.systemui.media.NotificationPlayer: void play(Context,Uri,boolean,int)>
<android.renderscript.Mesh.AllocationBuilder: void <init>(RenderScript)>
<android.net.NetworkStatsHistory.DataStreamUtils: long[] readFullLongArray(DataInputStream)>
<android.renderscript.Mesh: Allocation getVertexAllocation(int)>
<android.content.ClipboardManager: CharSequence getText()>
<android.webkit.Plugin: void <init>(String,String,String,String)>
<android.content.Intent: IBinder getIBinderExtra(String)>
<android.renderscript.RSSurfaceView: RenderScriptGL createRenderScriptGL(SurfaceConfig)>
<android.webkit.WebChromeClient: void onExceededDatabaseQuota(String,String,long,long,long,QuotaUpdater)>
<android.webkit.WebSettings: void setUseDoubleTree(boolean)>
<android.provider.Settings.System: void setShowGTalkServiceStatus(ContentResolver,boolean)>
<android.app.Service: void setForeground(boolean)>
<android.net.NetworkStatsHistory: void removeBucketsBefore(long)>
<android.renderscript.RenderScriptGL: void setSurfaceTexture(SurfaceTexture,int,int)>
<android.view.ViewConfiguration: int getMinimumFlingVelocity()>
<android.telecom.Connection: void setCallCapabilities(int)>
<android.net.ConnectivityManager: void setBackgroundDataSetting(boolean)>
<android.webkit.WebSettings: boolean enableSmoothTransition()>
<android.net.ConnectivityManager: void setNetworkPreference(int)>
<android.media.AudioManager: void registerRemoteControlClient(RemoteControlClient)>
<android.graphics.drawable.BitmapDrawable: void <init>()>
<android.renderscript.ProgramRaster: ProgramRaster CULL_BACK(RenderScript)>
<android.content.Context: void removeStickyBroadcastAsUser(Intent,UserHandle)>
<android.net.NetworkTemplate: boolean matchesMobile4g(NetworkIdentity)>
<android.view.inputmethod.InputMethodSubtype: void <init>(int,int,String,String,String,boolean,boolean,int)>
<android.renderscript.Mesh.TriangleMeshBuilder: TriangleMeshBuilder addVertex(float,float,float)>
<android.content.Context: int getWallpaperDesiredMinimumWidth()>
<android.renderscript.ProgramRaster: ProgramRaster CULL_NONE(RenderScript)>
<com.android.internal.policy.impl.PhoneWindow: void setTitleColor(int)>
<android.content.ContentResolver: SyncInfo getCurrentSync()>
<android.telephony.NeighboringCellInfo: void <init>(int,int)>
<android.telephony.TelephonyManager: String getIsimChallengeResponse(String)>
<android.webkit.CacheManager: boolean endCacheTransaction()>
<android.net.NetworkTemplate: NetworkTemplate buildTemplateMobile4g(String)>
<com.android.uiautomator.core.QueryController: String getCurrentActivityName()>
<android.view.ViewDebug: void startRecyclerTracing(String,View)>
<android.renderscript.ProgramVertex: int getInputCount()>
<android.webkit.WebView: int findAll(String)>
<com.android.server.devicepolicy.DeviceOwner: DeviceOwner createWithProfileOwner(String,String,int)>
<android.os.StatFs: int getAvailableBlocks()>
<android.database.sqlite.SQLiteProgram: int getUniqueId()>
<android.os.UserManager: void setUserRestriction(String,boolean,UserHandle)>
<android.provider.Contacts.Settings: String getSetting(ContentResolver,String,String)>
<android.renderscript.ProgramFragmentFixedFunction.Builder: void <init>(RenderScript)>
<android.provider.Contacts.People: void <init>()>
<android.renderscript.ProgramFragmentFixedFunction.InternalBuilder: ProgramFragmentFixedFunction create()>
<android.renderscript.Font: Font createFromResource(RenderScript,Resources,int,float)>
<android.renderscript.Mesh: Primitive getPrimitive(int)>
<android.provider.Contacts.Settings: void setSetting(ContentResolver,String,String,String)>
<android.net.http.AndroidHttpClient: AndroidHttpClient newInstance(String,Context)>
<com.android.server.pm.PackageInstallerService: String allocateExternalStageCidLegacy()>
<android.provider.Contacts.People: void setPhotoData(ContentResolver,Uri,byte[])>
<android.app.ActionBar: int getSelectedNavigationIndex()>
<android.test.TouchUtils: void dragViewToBottom(ActivityInstrumentationTestCase,View,int)>
<android.content.pm.PackageManager: void installPackageWithVerification(Uri,IPackageInstallObserver,int,String,Uri,ManifestDigest,ContainerEncryptionParams)>
<android.net.TrafficStats: long getUidTcpRxBytes(int)>
<android.provider.Settings.Secure: boolean isLocationProviderEnabledForUser(ContentResolver,String,int)>
<android.app.ActionBar: void addTab(Tab,int,boolean)>
<android.webkit.WebChromeClient: void onShowCustomView(View,int,CustomViewCallback)>
<android.bluetooth.BluetoothGatt: void abortReliableWrite(BluetoothDevice)>
<android.preference.PreferenceActivity: PreferenceScreen getPreferenceScreen()>
<android.os.Environment.UserEnvironment: File getExternalStoragePublicDirectory(String)>
<android.webkit.URLUtil: boolean isCookielessProxyUrl(String)>
<android.net.ConnectivityManager: int stopUsingNetworkFeature(int,String)>
<android.renderscript.RSTextureView: void <init>(Context,AttributeSet)>
<android.test.TouchUtils: int dragViewToY(ActivityInstrumentationTestCase,View,int,int)>
<android.nfc.NfcAdapter: NfcAdapter getDefaultAdapter()>
<android.webkit.WebSettings: boolean getLightTouchEnabled()>
<android.os.Debug: int getGlobalExternalFreedCount()>
<android.webkit.WebViewDatabase: boolean hasUsernamePassword()>
<android.webkit.WebViewDatabase: void clearUsernamePassword()>
<android.renderscript.ProgramFragmentFixedFunction.Builder: ProgramFragmentFixedFunction create()>
<android.util.AtomicFile: void truncate()>
<android.view.MotionEvent: MotionEvent obtain(long,long,int,int,int[],PointerCoords[],int,float,float,int,int,int,int)>
<android.renderscript.ProgramVertexFixedFunction.Constants: void setTexture(Matrix4f)>
<android.speech.tts.TextToSpeech: int setOnUtteranceCompletedListener(OnUtteranceCompletedListener)>
<android.text.SpannableStringBuilder: int getTextRunCursor(int,int,int,int,int,Paint)>
<android.webkit.WebSettings: void setPluginsPath(String)>
<android.webkit.WebView: void onGlobalFocusChanged(View,View)>
<android.accessibilityservice.AccessibilityServiceInfo: String getDescription()>
<android.speech.tts.TextToSpeech: boolean areDefaultsEnforced()>
<android.view.ViewConfiguration: int getDoubleTapSlop()>
<android.widget.CursorAdapter: void <init>(Context,Cursor)>
<android.webkit.WebSettings: void setAppCacheMaxSize(long)>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setSamples(int,int,float)>
<android.content.Intent: Object getExtra(String)>
<android.hardware.SensorManager: int getSensors()>
<android.renderscript.ProgramFragment.Builder: ProgramFragment create()>
<android.telephony.PhoneNumberUtils: void formatJapaneseNumber(Editable)>
<android.graphics.drawable.BitmapDrawable: void <init>(String)>
<android.content.pm.PackageInstaller: void addSessionCallback(SessionCallback,Handler)>
<android.webkit.WebView: void freeMemory()>
<android.content.pm.PackageManager: void removePackageFromPreferred(String)>
<android.renderscript.RenderScriptGL: void resume()>
<android.test.InstrumentationTestCase: void injectInsrumentation(Instrumentation)>
<android.media.AudioTrack: int setStereoVolume(float,float)>
<android.webkit.WebView: void refreshPlugins(boolean)>
<android.provider.Contacts.Organizations: CharSequence getDisplayLabel(Context,int,CharSequence)>
<android.content.Context: Drawable getWallpaper()>
<android.webkit.WebView: boolean canZoomIn()>
<android.view.ViewConfiguration: long getGlobalActionKeyTimeout()>
<android.webkit.WebView: boolean canZoomOut()>
<android.webkit.WebSettings: void setLightTouchEnabled(boolean)>
<android.database.CursorWindow: boolean isString(int,int)>
<android.os.PowerManager: void userActivity(long,boolean)>
<android.app.Activity: void onPrepareDialog(int,Dialog,Bundle)>
<android.app.Notification.Builder: Builder setSound(Uri,int)>
<android.renderscript.ProgramRaster: CullMode getCullMode()>
<android.preference.PreferenceActivity: Preference findPreference(CharSequence)>
<android.content.Context: void setWallpaper(Bitmap)>
<android.renderscript.RenderScriptGL.SurfaceConfig: void <init>()>
<android.net.Proxy: int getPort(Context)>
<android.webkit.CookieManager: void removeSessionCookie()>
<android.telecom.Conference: int getCapabilities()>
<android.widget.SimpleCursorAdapter: void <init>(Context,int,Cursor,String[],int[])>
<android.widget.FrameLayout: boolean getConsiderGoneChildrenWhenMeasuring()>
<android.view.Window: void setTitleColor(int)>
<android.test.TouchUtils: int dragViewBy(InstrumentationTestCase,View,int,int,int)>
<android.webkit.UrlInterceptRegistry: CacheResult getSurrogate(String,Map<String, String>)>
<android.provider.Settings.System: boolean getShowGTalkServiceStatus(ContentResolver)>
<android.telephony.PhoneNumberUtils: String formatNumber(String,int)>
<android.view.Surface: void unlockCanvas(Canvas)>
<android.webkit.WebChromeClient: void onReachedMaxAppCacheSize(long,long,QuotaUpdater)>
<android.accounts.AccountManager: AccountManagerFuture<Boolean> removeAccountAsUser(Account,AccountManagerCallback<Boolean>,Handler,UserHandle)>
<android.telecom.RemoteConference: int getCallCapabilities()>
<android.app.ActionBar: Tab getTabAt(int)>
<android.view.GestureDetector: void <init>(OnGestureListener)>
<com.android.server.notification.NotificationRecord: int getUserId()>
<android.net.http.SslCertificate: void <init>(String,String,Date,Date)>
<android.os.Debug: void resetGlobalExternalFreedCount()>
<android.net.NetworkTemplate: NetworkTemplate buildTemplateMobile3gLower(String)>
<android.renderscript.Mesh.Builder: Builder addVertexType(Element,int)>
<android.database.sqlite.SQLiteQueryBuilder: String buildQuery(String[],String,String[],String,String,String,String)>
<android.renderscript.Mesh.TriangleMeshBuilder: Mesh create(boolean)>
<android.os.Bundle: void putIBinder(String,IBinder)>
<android.os.Debug: void resetThreadExternalAllocSize()>
<android.content.Intent: Intent putExtra(String,IBinder)>
<android.widget.OverScroller: int getDuration()>
<android.provider.ContactsContract.CommonDataKinds.Phone: CharSequence getDisplayLabel(Context,int,CharSequence,CharSequence[])>
<com.android.server.devicepolicy.DeviceOwner: void setProfileOwner(String,String,int)>
<android.text.style.ImageSpan: void <init>(Bitmap,int)>
<android.app.Notification.Builder: Notification getNotification()>
<android.drm.DrmStore.RightsStatus: void <init>()>
<android.renderscript.RSTextureView: void onSurfaceTextureSizeChanged(SurfaceTexture,int,int)>
<android.database.sqlite.SQLiteDatabase: Map<String, String> getSyncedTables()>
<android.renderscript.RSTextureView: RenderScriptGL createRenderScriptGL(SurfaceConfig)>
<android.renderscript.RSSurfaceView: void <init>(Context,AttributeSet)>
<android.renderscript.FileA3D: int getIndexEntryCount()>
<android.webkit.WebView: void onChildViewRemoved(View,View)>
<android.provider.UserDictionary.Words: void addWord(Context,String,int,int)>
<android.provider.Contacts.People: Bitmap loadContactPhoto(Context,Uri,int,Options)>
<android.webkit.WebSettings: void setUseWebViewBackgroundForOverscrollBackground(boolean)>
<android.provider.ContactsContract.StreamItems: void <init>()>
<android.app.ActivityManager: List<RecentTaskInfo> getRecentTasks(int,int)>
<android.renderscript.RSSurfaceView: void surfaceDestroyed(SurfaceHolder)>
<android.media.RingtoneManager: void setIncludeDrm(boolean)>
<android.view.View: void requestFitSystemWindows()>
<android.hardware.SensorManager: boolean registerListener(SensorListener,int,int)>
<android.view.KeyEvent: boolean dispatch(Callback)>
<android.media.AudioManager: void unregisterRemoteController(RemoteController)>
<android.renderscript.Mesh.Builder: int getCurrentVertexTypeIndex()>
<android.renderscript.RenderScriptGL: void setSurface(SurfaceHolder,int,int)>
<android.renderscript.ProgramVertexFixedFunction.InternalBuilder: void <init>(RenderScript)>
<android.animation.LayoutTransition: void showChild(ViewGroup,View)>
<android.view.ViewConfiguration: int getEdgeSlop()>
<android.nfc.NfcAdapter: void enableForegroundNdefPush(Activity,NdefMessage)>
<com.android.internal.inputmethod.InputMethodUtils: boolean isValidSystemDefaultIme(boolean,InputMethodInfo,Context)>
<android.webkit.WebChromeClient: boolean onJsTimeout()>
<android.webkit.WebView: boolean savePicture(Bundle,File)>
<android.widget.ResourceCursorAdapter: void <init>(Context,int,Cursor)>
<android.provider.Contacts.People: long tryGetMyContactsGroupId(ContentResolver)>
<android.speech.tts.TextToSpeech: int setEngineByPackageName(String)>
<android.renderscript.RenderScriptGL: void bindProgramVertex(ProgramVertex)>
<android.net.TrafficStats: long getUidUdpTxPackets(int)>
<android.app.Activity: Dialog onCreateDialog(int,Bundle)>
<android.content.Context: int getWallpaperDesiredMinimumHeight()>
<android.content.Context: void sendStickyBroadcastAsUser(Intent,UserHandle)>
<android.view.KeyEvent: void <init>(KeyEvent,long,int)>
<android.graphics.Canvas: GL getGL()>
<android.database.AbstractCursor: boolean isFieldUpdated(int)>
<android.app.ActivityManager: List<RunningTaskInfo> getRunningTasks(int)>
<android.hardware.Camera.Parameters: void setPreviewFrameRate(int)>
<android.bluetooth.BluetoothAdapter: void stopLeScan(LeScanCallback)>
<android.telecom.Connection: int getCallCapabilities()>
<android.test.TouchUtils: void scrollToBottom(ActivityInstrumentationTestCase,ViewGroup)>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setDepth(int,int)>
<com.android.server.pm.PackageManagerService: void querySyncProviders(List<String>,List<ProviderInfo>)>
<android.media.RingtoneManager: boolean getIncludeDrm()>
<android.graphics.drawable.NinePatchDrawable: void <init>(NinePatch)>
<android.view.ViewDebug: void stopHierarchyTracing()>
<android.net.NetworkTemplate: NetworkTemplate buildTemplateWifi()>
<android.nfc.NfcAdapter: void disableForegroundNdefPush(Activity)>
<android.webkit.PluginList: void removePlugin(Plugin)>
<android.webkit.PluginData: long getContentLength()>
<com.android.server.connectivity.Vpn: void interfaceStatusChanged(String,boolean)>
<android.app.Activity: Cursor managedQuery(Uri,String[],String,String)>
<android.app.Notification: void <init>(int,CharSequence,long)>
<android.telephony.NeighboringCellInfo: void setCid(int)>
<android.hardware.Camera.Parameters: int getPreviewFrameRate()>
<android.renderscript.Font: Font createFromAsset(RenderScript,Resources,String,float)>
<android.net.ConnectivityManager: boolean setProcessDefaultNetworkForHostResolution(Network)>
<android.webkit.CookieManager: void removeExpiredCookie()>
<android.os.Debug: int getThreadExternalAllocCount()>
<android.net.NetworkStatsHistory: void recordData(long,long,long,long)>
<android.webkit.WebView: boolean shouldDelayChildPressedState()>
<android.os.UserManager: void setUserRestrictions(Bundle)>
<android.webkit.WebSettings: boolean getPluginsEnabled()>
<android.provider.Contacts.People: Uri addToGroup(ContentResolver,long,String)>
<com.android.keyguard.KeyguardWidgetPager: void addView(View,int,int)>
<android.renderscript.RenderScriptGL.SurfaceConfig: void <init>(SurfaceConfig)>
<android.renderscript.Mesh.Builder: Builder addIndexSetType(Element,int,Primitive)>
<android.provider.Settings.System: boolean getShowGTalkServiceStatusForUser(ContentResolver,int)>
<android.service.notification.NotificationListenerService: void cancelNotification(String,String,int)>
<android.webkit.WebSettings: PluginState getPluginState()>
<android.provider.Contacts.People: Cursor queryGroups(ContentResolver,long)>
<android.webkit.UrlInterceptRegistry: boolean unregisterHandler(UrlInterceptHandler)>
<android.view.ActionProvider: View onCreateActionView()>
<android.telephony.PhoneNumberUtils: String formatNumber(String)>
<android.webkit.Plugin.PreferencesClickHandler: void handleClickEvent(Context)>
<android.app.SearchManager: void onCancel(DialogInterface)>
<android.renderscript.Mesh.AllocationBuilder: Mesh create()>
<android.test.TouchUtils: void dragViewToTop(ActivityInstrumentationTestCase,View)>
<android.net.http.SslError: void <init>(int,SslCertificate)>
<android.view.Display: int getWidth()>
<android.transition.ChangeBounds: void setReparent(boolean)>
<android.provider.Contacts.ContactMethods: void addPostalLocation(Context,long,double,double)>
<android.view.View: boolean fitSystemWindows(Rect)>
<android.database.sqlite.SQLiteQueryBuilder: String buildUnionSubQuery(String,String[],Set<String>,int,String,String,String[],String,String)>
<android.test.TouchUtils: void scrollToTop(ActivityInstrumentationTestCase,ViewGroup)>
<android.provider.Settings.Secure: boolean isLocationProviderEnabled(ContentResolver,String)>
<android.content.pm.PackageManager: void installPackage(Uri,IPackageInstallObserver,int,String)>
<android.renderscript.RSSurfaceView: void surfaceChanged(SurfaceHolder,int,int,int)>
<android.renderscript.Mesh.TriangleMeshBuilder: TriangleMeshBuilder addVertex(float,float)>
<android.renderscript.RSTextureView: void onSurfaceTextureUpdated(SurfaceTexture)>
<android.os.Debug: int getGlobalExternalFreedSize()>
<android.view.ViewConfiguration: int getScrollBarSize()>
<android.database.sqlite.SQLiteDatabase: void setLockingEnabled(boolean)>
<android.view.ViewConfiguration: int getTouchSlop()>
<android.os.StatFs: int getFreeBlocks()>
<android.test.TouchUtils: void dragQuarterScreenDown(ActivityInstrumentationTestCase)>
<com.android.layoutlib.bridge.Bridge: EnumSet<Capability> getCapabilities()>
<android.os.UserManager: void setUserRestriction(String,boolean)>
<android.os.Debug: int getGlobalExternalAllocCount()>
<android.provider.Contacts.Intents.UI: void <init>()>
<android.net.NetworkTemplate: boolean matchesMobile3gLower(NetworkIdentity)>
<android.webkit.Plugin: void dispatchClickEvent(Context)>
<android.inputmethodservice.InputMethodService: void onUpdateCursor(Rect)>
<com.android.internal.util.FileRotator: void combineActive(Reader,Writer,long)>
<android.webkit.WebViewClient: void onUnhandledKeyEvent(WebView,KeyEvent)>
<android.renderscript.FileA3D: IndexEntry getIndexEntry(int)>
<android.webkit.UrlInterceptRegistry: PluginData getPluginData(String,Map<String, String>)>
<android.database.sqlite.SQLiteDatabase: void markTableSyncable(String,String,String)>
<android.provider.Contacts.Phones: CharSequence getDisplayLabel(Context,int,CharSequence)>
<android.widget.OverScroller: void setFinalY(int)>
<android.app.Activity: void setPersistent(boolean)>
<android.database.Cursor: boolean requery()>
<android.hardware.SensorManager: void unregisterListener(SensorListener)>
<android.media.MediaCodecList: int getCodecCount()>
<android.opengl.Matrix: void <init>()>
<android.graphics.Canvas: void drawBitmap(int[],int,int,int,int,int,int,boolean,Paint)>
<android.renderscript.ProgramVertexFixedFunction.Constants: void setProjection(Matrix4f)>
<android.app.Activity: void setTitleColor(int)>
<android.provider.Contacts.People: Uri addToGroup(ContentResolver,long,long)>
<android.widget.AutoCompleteTextView: OnItemSelectedListener getItemSelectedListener()>
<android.telephony.NeighboringCellInfo: void setRssi(int)>
<android.telephony.PhoneNumberUtils: int getFormatTypeForLocale(Locale)>
<android.provider.Contacts.People.Extensions: void <init>()>
<android.renderscript.Mesh.TriangleMeshBuilder: TriangleMeshBuilder addTriangle(int,int,int)>
<android.renderscript.Allocation: void resize(int)>
<android.renderscript.RSSurfaceView: void <init>(Context)>
<android.content.Intent: String toURI()>
<android.app.ActionBar: int getNavigationMode()>
<android.view.MotionEvent: MotionEvent obtain(long,long,int,int,float,float,float,float,int,float,float,int,int)>
<android.test.AndroidTestRunner: void setInstrumentaiton(Instrumentation)>
<android.telephony.NeighboringCellInfo: void <init>()>
<android.graphics.drawable.BitmapDrawable: void <init>(InputStream)>
<android.nfc.NdefRecord: byte[] toByteArray()>
<android.app.ActionBar: int getTabCount()>
<android.graphics.Canvas: boolean clipRegion(Region)>
<android.database.CursorWindow: boolean isBlob(int,int)>
<android.provider.ContactsContract.CommonDataKinds.Phone: CharSequence getDisplayLabel(Context,int,CharSequence)>
<android.media.AudioTrack: int getNativeFrameCount()>
<android.view.ViewDebug: void trace(View,HierarchyTraceType)>
<android.content.Context: void clearWallpaper()>
<android.content.ClipboardManager: void setText(CharSequence)>
<android.net.TrafficStats: long getUidUdpRxPackets(int)>
<android.renderscript.ProgramVertex.Builder: void <init>(RenderScript)>
<android.graphics.Paint: Rasterizer setRasterizer(Rasterizer)>
<android.hardware.Camera.Parameters: void dump()>
<android.renderscript.ProgramVertexFixedFunction: void bindConstants(Constants)>
<android.speech.tts.TextToSpeech: int playEarcon(String,int,HashMap<String, String>)>
<android.accessibilityservice.AccessibilityServiceInfo: boolean getCanRetrieveWindowContent()>
<android.webkit.WebSettings: void setDefaultZoom(ZoomDensity)>
<android.renderscript.Mesh.Builder: void <init>(RenderScript,int)>
<android.renderscript.ProgramVertexFixedFunction.Builder: ProgramVertexFixedFunction create()>
<android.renderscript.Font: Font createFromFile(RenderScript,Resources,File,float)>
<android.webkit.Plugin: void setFileName(String)>
<android.hardware.location.GeofenceHardwareMonitorCallback: void onMonitoringSystemChange(int,boolean,Location)>
<android.os.UserManager: void setUserRestrictions(Bundle,UserHandle)>
<com.android.uiautomator.core.UiDevice: String getCurrentActivityName()>
<android.view.ViewConfiguration: int getMaximumFlingVelocity()>
<android.os.Debug: void resetThreadExternalAllocCount()>
<android.webkit.WebSettings: void setEnableSmoothTransition(boolean)>
<android.webkit.WebSettings: void setTextSize(TextSize)>
<android.database.CursorWindow: boolean isLong(int,int)>
<android.app.ActionBar: void setListNavigationCallbacks(SpinnerAdapter,OnNavigationListener)>
<android.content.pm.PackageManager: void addPreferredActivity(IntentFilter,int,ComponentName[],ComponentName)>
<android.os.Debug: int getGlobalExternalAllocSize()>
<android.database.AbstractCursor: Object getUpdatedField(int)>
<android.renderscript.Font: Font create(RenderScript,Resources,String,Style,float)>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setAlpha(int,int)>
<android.media.AudioManager: void setRouting(int,int,int)>
<android.view.Surface: void transferFrom(Surface)>
<android.net.SSLCertificateSocketFactory: void <init>(int)>
<android.bluetooth.BluetoothAdapter: boolean startLeScan(LeScanCallback)>
<android.webkit.CookieSyncManager: void startSync()>
<android.webkit.CookieManager: void removeAllCookie()>
<android.hardware.Camera.Parameters: List<Integer> getSupportedPreviewFrameRates()>
<android.net.ConnectivityManager: int startUsingNetworkFeature(int,String)>
<android.widget.ListView: long[] getCheckItemIds()>
<android.renderscript.FileA3D: FileA3D createFromAsset(RenderScript,AssetManager,String)>
<android.speech.tts.TextToSpeech: Locale getLanguage()>
<android.renderscript.ProgramVertexFixedFunction.Builder: Builder setTextureMatrixEnable(boolean)>
<android.webkit.Plugin: String getDescription()>
<android.app.Notification: void setLatestEventInfo(Context,CharSequence,CharSequence,PendingIntent)>
<android.media.Ringtone: int getStreamType()>
<android.renderscript.Mesh.TriangleMeshBuilder: TriangleMeshBuilder setNormal(float,float,float)>
<android.media.MediaRecorder: void setAuxiliaryOutputFile(String)>
<android.webkit.UrlInterceptRegistry: boolean registerHandler(UrlInterceptHandler)>
<android.view.accessibility.AccessibilityManager: List<ServiceInfo> getAccessibilityServiceList()>
<android.app.Fragment: void onInflate(AttributeSet,Bundle)>
<android.text.format.DateUtils: String getMonthString(int,int)>
<android.renderscript.ProgramFragmentFixedFunction.Builder: Builder setPointSpriteTexCoordinateReplacement(boolean)>
<android.webkit.PluginData: InputStream getInputStream()>
<android.test.TouchUtils: void dragViewToTop(ActivityInstrumentationTestCase,View,int)>
<android.renderscript.FileA3D: FileA3D createFromResource(RenderScript,Resources,int)>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setColor(int,int)>
<android.content.IntentSender: String getTargetPackage()>
<android.webkit.PluginData: void <init>(InputStream,long,Map<String, String[]>,int)>
<android.net.TrafficStats: long getUidTcpTxSegments(int)>
<android.database.AbstractWindowedCursor: boolean isFloat(int)>
<android.webkit.WebSettings: String getPluginsPath()>
<android.telephony.CellIdentityGsm: int getPsc()>
<android.view.ViewDebug: void stopRecyclerTracing()>
<android.preference.PreferenceActivity: void setPreferenceScreen(PreferenceScreen)>
<android.media.AudioManager: void setParameter(String,String)>
<android.view.inputmethod.InputMethodSubtype: void <init>(int,int,String,String,String,boolean,boolean)>
<android.webkit.PluginData: Map<String, String[]> getHeaders()>
<android.renderscript.Mesh.Builder: int getCurrentIndexSetIndex()>
<android.webkit.WebViewClient: WebResourceResponse shouldInterceptRequest(WebView,String)>
<android.renderscript.ProgramRaster: boolean isPointSpriteEnabled()>
<android.provider.Contacts.Phones: CharSequence getDisplayLabel(Context,int,CharSequence,CharSequence[])>
<com.android.internal.inputmethod.InputMethodUtils: boolean containsSubtypeOf(InputMethodInfo,String,String)>
<android.app.Dialog: void <init>(Context,boolean,Message)>
<android.webkit.WebSettings: void setNavDump(boolean)>
<android.app.Activity: boolean showDialog(int,Bundle)>
<android.os.Debug: void changeDebugPort(int)>
<android.renderscript.RSTextureView: void pause()>
<android.webkit.Plugin: void setPath(String)>
<android.os.Debug: void resetGlobalExternalAllocCount()>
<android.bluetooth.BluetoothAdapter: boolean startLeScan(UUID[],LeScanCallback)>
<android.renderscript.ProgramRaster: ProgramRaster CULL_FRONT(RenderScript)>
<android.provider.Contacts.Intents.Insert: void <init>()>
<android.view.inputmethod.InputMethodManager: void updateCursor(View,int,int,int,int)>
<android.webkit.Plugin.DefaultClickHandler: void handleClickEvent(Context)>
<com.android.server.pm.PackageInstallerService: File allocateInternalStageDirLegacy()>
<android.media.AudioManager: void setWiredHeadsetOn(boolean)>
<android.renderscript.ScriptIntrinsicColorMatrix: ScriptIntrinsicColorMatrix create(RenderScript,Element)>
<android.renderscript.ProgramRaster.Builder: void <init>(RenderScript)>
<android.net.TrafficStats: long getUidUdpTxBytes(int)>
<android.webkit.Plugin.DefaultClickHandler: void onClick(DialogInterface,int)>
<android.view.textservice.SpellCheckerSession: void getSuggestions(TextInfo[],int,boolean)>
<android.hardware.SensorManager: boolean registerListener(SensorListener,int)>
<android.speech.tts.SynthesisRequest: String getText()>
<android.net.NetworkStatsHistory: void generateRandom(long,long,long)>
<android.renderscript.ProgramFragmentFixedFunction.Builder: Builder setVaryingColor(boolean)>
<android.media.AudioManager: boolean shouldVibrate(int)>
<com.android.server.NativeDaemonEvent: String getRawEvent()>
<android.webkit.PluginList: void addPlugin(Plugin)>
<android.view.ViewDebug: void startHierarchyTracing(String,View)>
<android.nfc.NdefRecord: void <init>(byte[])>
<android.provider.Contacts.People: void markAsContacted(ContentResolver,long)>
<android.provider.ContactsContract.StreamItemPhotos: void <init>()>
<android.provider.Contacts.ContactMethods: String encodeCustomImProtocol(String)>
<android.renderscript.ProgramVertexFixedFunction.InternalBuilder: ProgramVertexFixedFunction create()>
<android.renderscript.RSTextureView: void onSurfaceTextureAvailable(SurfaceTexture,int,int)>
<android.provider.Contacts.Presence: void setPresenceIcon(ImageView,int)>
<android.renderscript.RSSurfaceView: void resume()>
<android.webkit.WebSettings: void setPluginsEnabled(boolean)>
<android.net.http.AndroidHttpClient: AndroidHttpClient newInstance(String)>
<android.renderscript.RSTextureView: void setRenderScriptGL(RenderScriptGL)>
<android.renderscript.Mesh.TriangleMeshBuilder: TriangleMeshBuilder setColor(float,float,float,float)>
<android.view.textservice.SpellCheckerSession: void getSuggestions(TextInfo,int)>
<android.app.ActionBar: void removeAllTabs()>
<android.webkit.CookieSyncManager: void resetSync()>
<android.webkit.PluginList: void clear()>
<android.app.KeyguardManager: void exitKeyguardSecurely(OnKeyguardExitResult)>
<android.renderscript.Mesh.AllocationBuilder: int getCurrentVertexTypeIndex()>
<android.app.ActionBar: void removeTabAt(int)>
<android.renderscript.Mesh.AllocationBuilder: int getCurrentIndexSetIndex()>
<android.webkit.WebView: void onChildViewAdded(View,View)>
<android.speech.tts.TextToSpeech: int addEarcon(String,String)>
<android.database.sqlite.SQLiteDatabase: void markTableSyncable(String,String)>
<android.app.ActionBar: void addTab(Tab,boolean)>
<android.provider.Contacts.People: Uri addToMyContactsGroup(ContentResolver,long)>
<android.webkit.PluginData: int getStatusCode()>
<android.database.AbstractWindowedCursor: boolean isBlob(int)>
<android.renderscript.RSTextureView: RenderScriptGL getRenderScriptGL()>
<android.test.TouchUtils: int dragViewBy(ActivityInstrumentationTestCase,View,int,int,int)>
<android.webkit.WebSettings: int getUserAgent()>
<android.content.ContentResolver: void startSync(Uri,Bundle)>
<android.content.ClipboardManager: boolean hasText()>
<android.view.ViewConfiguration: int getFadingEdgeLength()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: Drawable[] getChildren()>
<android.app.Activity: void onPrepareDialog(int,Dialog)>
<android.view.Display: int getHeight()>
<android.telecom.RemoteConnection.Callback: void onCallCapabilitiesChanged(RemoteConnection,int)>
<com.android.internal.inputmethod.InputMethodUtils: boolean isSystemImeThatHasEnglishKeyboardSubtype(InputMethodInfo)>
<android.view.KeyEvent: int getKeyboardDevice()>
<com.android.keyguard.KeyguardWidgetPager: void addView(View,int)>
<android.media.AudioManager: void registerMediaButtonEventReceiver(PendingIntent)>
<com.android.server.pm.PackageManagerService: boolean isPermissionEnforced(String)>
<android.content.res.Configuration: void makeDefault()>
<android.renderscript.Font: Font createFromFile(RenderScript,Resources,String,float)>
<android.app.Activity: Cursor managedQuery(Uri,String[],String,String[],String)>
<android.widget.OverScroller: void setFinalX(int)>
<android.webkit.WebSettings: boolean getUseDoubleTree()>
<android.renderscript.RSTextureView: void destroyRenderScriptGL()>
<android.database.ContentObservable: void dispatchChange(boolean)>
<android.app.Activity: void stopManagingCursor(Cursor)>
<android.net.ConnectivityManager: boolean requestRouteToHost(int,int)>
<android.renderscript.ProgramVertex: Element getInput(int)>
<android.os.Bundle: IBinder getIBinder(String)>
<android.net.ConnectivityManager: ConnectivityManager getInstance()>
<android.animation.LayoutTransition: void hideChild(ViewGroup,View)>
<android.renderscript.Element: Element MATRIX4X4(RenderScript)>
<android.webkit.WebView: void setPictureListener(PictureListener)>
<com.android.internal.http.multipart.Part: String getBoundary()>
<android.view.ViewConfiguration: int getWindowTouchSlop()>
<android.webkit.UrlInterceptRegistry: void setUrlInterceptDisabled(boolean)>
<android.graphics.Paint: Rasterizer getRasterizer()>
<android.app.ActionBar: void selectTab(Tab)>
<android.media.AudioTrack: void setState(int)>
<android.renderscript.ProgramVertexFixedFunction.InternalBuilder: InternalBuilder addInput(Element)>
<android.renderscript.ProgramRaster.Builder: Builder setPointSpriteEnabled(boolean)>
<android.provider.Contacts.ContactMethods: String encodePredefinedImProtocol(int)>
<android.media.MediaCodec: ByteBuffer[] getOutputBuffers()>
<android.net.Proxy: int getDefaultPort()>
<android.drm.DrmStore.DrmObjectType: void <init>()>
<android.speech.tts.UtteranceProgressListener: void onError(String)>
<android.renderscript.FileA3D.IndexEntry: EntryType getEntryType()>
<android.net.Proxy: String getHost(Context)>
<android.net.NetworkStatsHistory: void generateRandom(long,long,long,long,long,long,long,Random)>
<android.database.ContentObserver: void dispatchChange(boolean)>
<android.webkit.WebView: boolean showFindDialog(String,boolean)>
<android.content.pm.PackageInstaller: void removeSessionCallback(SessionCallback)>
<android.webkit.WebView: void setMapTrackballToArrowKeys(boolean)>
<android.content.ContentResolver: void cancelSync(Uri)>
<android.renderscript.RenderScriptGL: int getWidth()>
<android.media.AudioManager: void unregisterMediaButtonEventReceiver(PendingIntent)>
<android.provider.ContactsContract.StreamItems.StreamItemPhotos: void <init>()>
<android.renderscript.FileA3D.IndexEntry: BaseObj getObject()>
<android.renderscript.Mesh: int getVertexAllocationCount()>
<android.renderscript.Mesh.Builder: Builder addIndexSetType(Type,Primitive)>
<android.renderscript.Mesh.AllocationBuilder: AllocationBuilder addIndexSetAllocation(Allocation,Primitive)>
<android.preference.PreferenceActivity: PreferenceManager getPreferenceManager()>
<android.opengl.EGLObjectHandle: int getHandle()>
<android.text.format.DateUtils: String getAMPMString(int)>
<android.provider.Contacts.People: Uri createPersonInMyContactsGroup(ContentResolver,ContentValues)>
<android.renderscript.RenderScriptGL: void bindProgramFragment(ProgramFragment)>
<android.webkit.WebStorage: void setQuotaForOrigin(String,long)>
<android.database.AbstractWindowedCursor: boolean isString(int)>
<android.webkit.WebSettings: boolean getNavDump()>
<android.content.Context: Drawable peekWallpaper()>
<android.renderscript.RSTextureView: boolean onSurfaceTextureDestroyed(SurfaceTexture)>
<android.content.pm.PackageInstaller: void addSessionCallback(SessionCallback)>
<android.webkit.Plugin: String getFileName()>
<android.webkit.WebSettings: void setSavePassword(boolean)>
<android.app.Activity: void showDialog(int)>
<android.webkit.WebView: void setCertificate(SslCertificate)>
<android.app.Activity: Dialog onCreateDialog(int)>
<android.app.Activity: void removeDialog(int)>
<com.android.keyguard.KeyguardWidgetPager: void addView(View,LayoutParams)>
<android.provider.Contacts.Presence: int getPresenceIconResourceId(int)>
<android.util.TypedValue: float complexToDimensionNoisy(int,DisplayMetrics)>
<android.webkit.CacheManager: CacheResult getCacheFile(String,Map<String, String>)>
<androidx.media.filterfw.CameraStreamer.CameraRunnable: Camera getCamera()>
<android.webkit.Plugin: String toString()>
<android.database.sqlite.SQLiteCursor: void <init>(SQLiteDatabase,SQLiteCursorDriver,String,SQLiteQuery)>
<android.app.ActionBar: void setNavigationMode(int)>
<android.app.PendingIntent: String getTargetPackage()>
<android.preference.PreferenceActivity: void addPreferencesFromIntent(Intent)>
<android.drm.DrmSupportInfo: String getDescriprition()>
<android.renderscript.ProgramFragmentFixedFunction.InternalBuilder: void <init>(RenderScript)>
<android.content.Context: void setWallpaper(InputStream)>
<android.webkit.WebSettings: void setPluginState(PluginState)>
<android.preference.PreferenceActivity: void addPreferencesFromResource(int)>
<android.webkit.WebView: boolean restorePicture(Bundle,File)>
<android.drm.DrmStore.Playback: void <init>()>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContended()>
<com.android.internal.util.XmlUtils: void writeBitmapAttribute(XmlSerializer,String,Bitmap)>
<android.renderscript.ProgramRaster.Builder: Builder setCullMode(CullMode)>
<android.renderscript.RSSurfaceView: void surfaceCreated(SurfaceHolder)>
<android.app.Activity: void startManagingCursor(Cursor)>
<android.renderscript.Mesh.TriangleMeshBuilder: TriangleMeshBuilder setTexture(float,float)>
<android.database.CursorWindow: boolean isNull(int,int)>
<android.renderscript.FileA3D: FileA3D createFromFile(RenderScript,File)>
<android.net.NetworkUtils: boolean bindProcessToNetworkForHostResolution(int)>
<android.os.Debug: void stopAllocCounting()>
<android.view.Display: int getOrientation()>
<com.android.server.net.NetworkStatsCollection: void readLegacyNetwork(File)>
<android.media.SoundPool: void <init>(int,int,int)>
<android.media.MediaRecorder: void setAuxiliaryOutputFile(FileDescriptor)>
<android.renderscript.FileA3D.IndexEntry: Mesh getMesh()>
<android.content.res.Resources: Drawable getDrawableForDensity(int,int)>
<android.renderscript.ProgramFragment.Builder: void <init>(RenderScript)>
<android.os.Debug: int getThreadExternalAllocSize()>
<android.provider.Settings.System: void setShowGTalkServiceStatusForUser(ContentResolver,boolean,int)>
<android.content.pm.PackageInstaller.Session: void setProgress(float)>
<android.app.AlertDialog: void setButton(CharSequence,Message)>
<android.content.ContentValues: void putStringArrayList(String,ArrayList<String>)>
<android.text.format.Formatter: String formatIpAddress(int)>
<android.webkit.Plugin: String getName()>
<android.webkit.Plugin: String getPath()>
<android.view.accessibility.AccessibilityNodeInfo: void removeAction(int)>
<android.net.ConnectivityManager: boolean getMobileDataEnabled()>
<android.content.pm.PackageManager: void installPackageWithVerificationAndEncryption(Uri,IPackageInstallObserver,int,String,VerificationParams,ContainerEncryptionParams)>
<android.renderscript.RenderScriptGL: void <init>(Context,SurfaceConfig)>
<android.app.Service: void onStart(Intent,int)>
<android.media.Ringtone: void setStreamType(int)>
<android.app.ActionBar: void addTab(Tab)>
<com.android.server.net.NetworkStatsCollection: void readLegacyUid(File,boolean)>
<android.app.ActivityManager: void restartPackage(String)>
<com.android.layoutlib.bridge.intensive.setup.LayoutPullParser: ILayoutPullParser getParser(String)>
<android.graphics.Picture: void writeToStream(OutputStream)>
<android.widget.CursorAdapter: void init(Context,Cursor,boolean)>
<android.media.AudioManager: void registerMediaButtonEventReceiver(ComponentName)>
<android.net.http.SslCertificate: void <init>(String,String,String,String)>
<android.webkit.UrlInterceptHandler: CacheResult service(String,Map<String, String>)>
<android.renderscript.RenderScriptGL: void bindProgramRaster(ProgramRaster)>
<android.drm.DrmStore.Action: void <init>()>
<android.webkit.Plugin: void setClickHandler(PreferencesClickHandler)>
<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(OnGlobalLayoutListener)>
<android.opengl.EGLObjectHandle: void <init>(int)>
<android.test.TouchUtils: int dragViewToX(ActivityInstrumentationTestCase,View,int,int)>
<android.renderscript.ProgramVertexFixedFunction.Constants: void <init>(RenderScript)>
<android.graphics.drawable.BitmapDrawable: void <init>(Bitmap)>
<android.telephony.PhoneNumberUtils: void formatNumber(Editable,int)>
<android.graphics.Picture: Picture createFromStream(InputStream)>
<android.view.ViewConfiguration: int getMaximumDrawingCacheSize()>
<android.webkit.WebViewClient: void onTooManyRedirects(WebView,Message,Message)>
<android.renderscript.ProgramFragmentFixedFunction.Builder: Builder setTexture(EnvMode,Format,int)>
<android.database.CursorWindow: void <init>(boolean)>
<android.renderscript.Mesh.Builder: Mesh create()>
<android.app.Activity: void dismissDialog(int)>
<android.app.Activity: Object getLastNonConfigurationInstance()>
<android.widget.OverScroller: void extendDuration(int)>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: IAutomationSupport getAutomationSupport()>
<android.media.AudioManager: boolean isWiredHeadsetOn()>
<android.graphics.Canvas: void drawBitmap(int[],int,int,float,float,int,int,boolean,Paint)>
<android.telephony.TelephonyManager: TelephonyManager getDefault()>
<android.telecom.Conference: void setCapabilities(int)>
<android.renderscript.RSSurfaceView: void pause()>
<android.speech.tts.TextToSpeech: Set<String> getFeatures(Locale)>
<android.media.AudioManager: int getRouting(int)>
<android.net.ConnectivityManager: boolean requestRouteToHostAddress(int,InetAddress)>
<android.app.AlertDialog: void setButton(CharSequence,OnClickListener)>
<android.media.AudioManager: void unregisterMediaButtonEventReceiver(ComponentName)>
<android.renderscript.RSTextureView: void resume()>
<android.app.AlertDialog: void setButton2(CharSequence,Message)>
<android.content.Context: void removeStickyBroadcast(Intent)>
<android.net.TrafficStats: long getUidTcpTxBytes(int)>
<android.net.BaseNetworkStateTracker: Handler getTargetHandler()>
<android.database.ContentObservable: void notifyChange(boolean)>
<android.webkit.WebChromeClient: void onConsoleMessage(String,int,String)>
<android.graphics.Canvas: void drawPosText(char[],int,int,float[],Paint)>
<android.view.Display: int getPixelFormat()>
<android.provider.Settings.Secure: void setLocationProviderEnabled(ContentResolver,String,boolean)>
<android.webkit.PluginList: void <init>()>
<android.util.AtomicFile: FileOutputStream openAppend()>
<android.renderscript.RenderScriptGL: void bindRootScript(Script)>
<android.app.ActionBar: void addTab(Tab,int)>
<android.webkit.WebSettings: TextSize getTextSize()>
<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>
<android.database.CursorWindow: boolean isFloat(int,int)>
<android.net.TrafficStats: long getUidUdpRxBytes(int)>
<android.net.ConnectivityManager: boolean getBackgroundDataSetting()>
<android.renderscript.FileA3D: FileA3D createFromFile(RenderScript,String)>
<android.view.KeyEvent: boolean isDown()>
<android.media.AudioManager: void setVibrateSetting(int,int)>
<android.webkit.WebView: void debugDump()>
<android.view.GestureDetector: void <init>(OnGestureListener,Handler)>
<android.renderscript.RSSurfaceView: void destroyRenderScriptGL()>
<android.app.ActionBar: void setSelectedNavigationItem(int)>
<android.media.AudioManager: void setBluetoothA2dpOn(boolean)>
<android.app.ActionBar: Tab getSelectedTab()>
<android.webkit.PluginList: List getList()>
<android.renderscript.ProgramVertex.Builder: Builder addInput(Element)>
<android.provider.Contacts.ContactMethods: Object decodeImProtocol(String)>
<android.app.Activity: Object onRetainNonConfigurationInstance()>
<android.view.ViewConfiguration: void <init>()>
<android.inputmethodservice.InputMethodService: boolean enableHardwareAcceleration()>
<android.webkit.WebSettings: boolean getSavePassword()>
<android.os.ParcelFileDescriptor: ParcelFileDescriptor fromData(byte[],String)>
<android.provider.ContactsContract.RawContacts.StreamItems: void <init>()>
<android.os.Process: boolean supportsProcesses()>
<android.graphics.Canvas: void drawPosText(String,float[],Paint)>
<android.provider.ContactsContract.Contacts.StreamItems: void <init>()>
<android.telephony.PhoneStateListener: void onSignalStrengthChanged(int)>
<android.renderscript.Mesh: Allocation getIndexSetAllocation(int)>
<android.renderscript.Mesh.AllocationBuilder: AllocationBuilder addVertexAllocation(Allocation)>
<android.webkit.WebSettings: void setUserAgent(int)>
<android.content.Intent: Object getExtra(String,Object)>
<android.content.pm.PackageInstaller.SessionInfo: boolean isOpen()>
<android.os.Environment: String getStorageState(File)>
<android.view.KeyEvent: boolean getKeyData(KeyData)>
<android.speech.tts.TextToSpeech: Locale getDefaultLanguage()>
<android.renderscript.Mesh.Builder: Builder addVertexType(Type)>
<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>
<android.os.Debug: int setGlobalAllocationLimit(int)>
<android.test.TouchUtils: void longClickView(ActivityInstrumentationTestCase,View)>
<android.test.TouchUtils: void dragQuarterScreenUp(ActivityInstrumentationTestCase)>
<android.test.TouchUtils: void dragViewToBottom(ActivityInstrumentationTestCase,View)>
<android.webkit.WebSettings: boolean getUseWebViewBackgroundForOverscrollBackground()>
<android.os.Debug: void resetGlobalExternalFreedSize()>
<android.renderscript.RSSurfaceView: RenderScriptGL getRenderScriptGL()>
<android.database.sqlite.SQLiteClosable: void releaseReferenceFromContainer()>
<android.content.Context: void sendStickyBroadcast(Intent)>
<android.media.MediaRecorder: void setCamera(Camera)>
<android.content.ContentValues: ArrayList<String> getStringArrayList(String)>
<android.net.http.SslCertificate: String getValidNotBefore()>
<android.hardware.SensorManager: void unregisterListener(SensorListener,int)>
<android.provider.Contacts.People: InputStream openContactPhotoInputStream(ContentResolver,Uri)>
<android.graphics.Canvas: Matrix getMatrix()>
<android.renderscript.ProgramVertexFixedFunction.Constants: void setModelview(Matrix4f)>
<android.app.admin.DevicePolicyManager: boolean setProfileOwner(String,String,int)>
<android.webkit.CacheManager: boolean startCacheTransaction()>
<android.renderscript.RenderScriptGL: int getHeight()>
<android.service.notification.StatusBarNotification: int getUserId()>
<android.os.StatFs: int getBlockSize()>
<android.content.Intent: Intent getIntent(String)>
<android.database.AbstractWindowedCursor: boolean isLong(int)>
<android.webkit.CacheManager: boolean cacheDisabled()>
<android.webkit.WebView.PictureListener: void onNewPicture(WebView,Picture)>
<android.content.pm.PackageManager: void replacePreferredActivityAsUser(IntentFilter,int,ComponentName[],ComponentName,int)>
<android.location.SettingInjectorService: String onGetSummary()>
<android.content.Context: void sendStickyOrderedBroadcastAsUser(Intent,UserHandle,BroadcastReceiver,Handler,int,String,Bundle)>
<android.content.pm.PackageInstaller.SessionInfo: Intent getDetailsIntent()>
<android.provider.Settings.Secure: boolean setLocationProviderEnabledForUser(ContentResolver,String,boolean,int)>
<android.drm.DrmStore: void <init>()>
<android.renderscript.Mesh: int getPrimitiveCount()>
<android.net.SSLCertificateSocketFactory: SSLSocketFactory getHttpSocketFactory(int,SSLSessionCache)>
<android.speech.tts.TextToSpeech: int playSilence(long,int,HashMap<String, String>)>
<android.app.Notification.Builder: Builder setTicker(CharSequence,RemoteViews)>
<android.view.View: void setBackgroundDrawable(Drawable)>
<android.webkit.WebHistoryItem: int getId()>
<android.webkit.CookieSyncManager: void sync()>
<android.speech.tts.TextToSpeech: int speak(String,int,HashMap<String, String>)>
<android.renderscript.ProgramRaster.Builder: ProgramRaster create()>
<android.webkit.WebView: void emulateShiftHeld()>
<android.webkit.WebView: PrintDocumentAdapter createPrintDocumentAdapter()>
<android.os.Debug: void startAllocCounting()>
<android.os.Debug: void resetGlobalExternalAllocSize()>
<android.net.http.SslError: void <init>(int,X509Certificate)>
<android.renderscript.ProgramVertex.Builder: ProgramVertex create()>
<android.app.AlertDialog: void setButton3(CharSequence,OnClickListener)>
<android.renderscript.RSTextureView: void <init>(Context)>
<android.provider.Contacts.ContactMethods: String lookupProviderNameFromId(int)>
<android.accounts.AccountManager: AccountManagerFuture<Bundle> getAuthToken(Account,String,boolean,AccountManagerCallback<Bundle>,Handler)>
<android.renderscript.RenderScriptGL: void bindProgramStore(ProgramStore)>
<android.webkit.WebView: PluginList getPluginList()>
<android.telephony.PhoneNumberUtils: void formatNanpNumber(Editable)>
<android.renderscript.FileA3D.IndexEntry: String getName()>
<android.webkit.WebSettings: ZoomDensity getDefaultZoom()>
<android.os.Debug: int setAllocationLimit(int)>
<android.webkit.WebChromeClient: void openFileChooser(ValueCallback<Uri>,String,String)>
<androidx.media.filterfw.CameraStreamer: Camera getCamera()>
<android.provider.Contacts.ContactMethods: CharSequence getDisplayLabel(Context,int,int,CharSequence)>
<android.app.ActionBar: void removeTab(Tab)>
<android.app.ActionBar: int getNavigationItemCount()>
<android.renderscript.ProgramVertexFixedFunction.Builder: void <init>(RenderScript)>
<android.webkit.CacheManager: File getCacheFileBaseDir()>
<android.content.pm.PackageManager: void addPackageToPreferred(String)>
<android.renderscript.ProgramVertexFixedFunction.Constants: void destroy()>
<android.net.ConnectivityManager: int getNetworkPreference()>
<android.graphics.Canvas: void getMatrix(Matrix)>
<android.transition.Scene: void <init>(ViewGroup,ViewGroup)>
<android.os.Parcel: T[] readTypedArray(Creator<T>)>
<android.view.accessibility.AccessibilityNodeInfo: int getActions()>
<android.os.Environment.UserEnvironment: File getExternalStorageDirectory()>
<android.view.ViewDebug: void trace(View,RecyclerTraceType,int)>
<android.net.TrafficStats: long getUidTcpRxSegments(int)>
<android.webkit.CookieSyncManager: void stopSync()>
<android.app.DownloadManager.Request: Request setShowRunningNotification(boolean)>
<android.app.AlertDialog: void setButton3(CharSequence,Message)>
<android.webkit.WebView: int getVisibleTitleHeight()>
<android.net.http.SslCertificate: String getValidNotAfter()>
<android.app.FragmentManager: FragmentTransaction openTransaction()>
<android.text.format.DateUtils: String getDayOfWeekString(int,int)>
<android.widget.RemoteViews: void setRemoteAdapter(int,int,Intent)>
<android.app.SearchManager: void onDismiss(DialogInterface)>
<android.webkit.CookieSyncManager: void syncFromRamToFlash()>
<android.provider.Contacts.Intents: void <init>()>
<android.view.KeyCharacterMap: boolean getKeyData(int,KeyData)>
<android.renderscript.RenderScriptGL: void pause()>
<android.webkit.WebSettings: void setDatabasePath(String)>
<com.android.keyguard.KeyguardWidgetPager: void addView(View,int,LayoutParams)>
<android.webkit.UrlInterceptRegistry: boolean urlInterceptDisabled()>
<android.webkit.PluginList: void pluginClicked(Context,int)>
<android.webkit.Plugin: void setDescription(String)>
<android.os.PowerManager: boolean isScreenOn()>
<android.widget.AutoCompleteTextView: OnItemClickListener getItemClickListener()>
<android.app.KeyguardManager: KeyguardLock newKeyguardLock(String)>
<android.media.AudioManager: int getVibrateSetting(int)>
<android.content.pm.PackageManager: void replacePreferredActivity(IntentFilter,int,ComponentName[],ComponentName)>
<android.media.AudioManager: boolean registerRemoteController(RemoteController)>
<android.provider.ContactsContract.Contacts: void markAsContacted(ContentResolver,long)>
<android.view.inputmethod.InputMethodManager: boolean isWatchingCursor(View)>
<android.graphics.drawable.NinePatchDrawable: void <init>(Bitmap,byte[],Rect,String)>
<android.test.TouchUtils: int dragViewTo(ActivityInstrumentationTestCase,View,int,int,int)>
<android.test.ActivityInstrumentationTestCase2: void <init>(String,Class<T>)>
<android.content.res.Resources: Drawable getDrawable(int)>
<android.webkit.WebView: void <init>(Context,AttributeSet,int,boolean)>
<android.app.admin.DevicePolicyManager: boolean setActiveProfileOwner(ComponentName,String)>
<android.app.AlertDialog: void setButton2(CharSequence,OnClickListener)>
<com.android.server.devicepolicy.DeviceOwner: String getProfileOwnerPackageName(int)>
<android.renderscript.Mesh.TriangleMeshBuilder: void <init>(RenderScript,int,int)>
<android.graphics.Canvas: boolean clipRegion(Region,Op)>
<android.webkit.WebSettings: String getDatabasePath()>
<android.webkit.WebSettings: void setRenderPriority(RenderPriority)>
<android.webkit.Plugin: void setName(String)>
<android.database.Cursor: void deactivate()>
<android.content.pm.PackageParser: Package parseMonolithicPackage(File,int)>
<android.media.AudioManager: void unregisterRemoteControlClient(RemoteControlClient)>
<android.database.sqlite.SQLiteClosable: void onAllReferencesReleasedFromContainer()>
<android.media.MediaCodecList: MediaCodecInfo getCodecInfoAt(int)>
<android.content.Context: void sendStickyOrderedBroadcast(Intent,BroadcastReceiver,Handler,int,String,Bundle)>
<android.view.SurfaceHolder: void setType(int)>
<android.app.ActionBar: Tab newTab()>
